@page "/register"
@using Meritocious.Blazor.Services.Forms
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject MessageService MessageService
@inject IFormStatusService FormStatus
@inject IValidationService ValidationService

<div class="register-container">
    <Card Style="width: 400px;">
        <div class="text-center mb-8">
            <h2 class="text-2xl font-bold">Join Meritocious</h2>
            <p class="text-gray-500">Create thoughtful content and engage in meaningful discussions</p>
        </div>

        <Steps Current="@currentStep" Size="small" Class="mb-8">
            <Step Title="Account" />
            <Step Title="Profile" />
            <Step Title="Interests" />
        </Steps>

        @switch (currentStep)
        {
            case 0:
                <BaseFormComponent TModel="RegisterModel"
                                 Model="@registerModel"
                                 OnSubmit="HandleAccountStep"
                                 SubmitText="Continue">
                    <FormItem Label="Email" Required>
                        <Input @bind-Value="@registerModel.Email" 
                              Placeholder="Enter your email"
                              OnChange="@ValidateEmail" />
                        @if (FormStatus.FieldErrors.ContainsKey("email"))
                        {
                            <small class="text-red-500">@FormStatus.FieldErrors["email"].First()</small>
                        }
                    </FormItem>

                    <FormItem Label="Username" Required>
                        <Input @bind-Value="@registerModel.Username"
                              Placeholder="Choose a username"
                              OnChange="@ValidateUsername" />
                        @if (isCheckingUsername)
                        {
                            <small class="text-gray-500">
                                <Icon Type="loading" Spin /> Checking availability...
                            </small>
                        }
                        else if (FormStatus.FieldErrors.ContainsKey("username"))
                        {
                            <small class="text-red-500">@FormStatus.FieldErrors["username"].First()</small>
                        }
                        else if (usernameAvailable.HasValue && usernameAvailable.Value)
                        {
                            <small class="text-green-500">Username is available</small>
                        }
                    </FormItem>

                    <FormItem Label="Password" Required>
                        <InputPassword @bind-Value="@registerModel.Password"
                                     Placeholder="Create a password"
                                     OnChange="@ValidatePassword" />
                        <PasswordStrengthIndicator Password="@registerModel.Password" />
                        @if (FormStatus.FieldErrors.ContainsKey("password"))
                        {
                            <small class="text-red-500">@FormStatus.FieldErrors["password"].First()</small>
                        }
                    </FormItem>

                    <FormItem Label="Confirm Password" Required>
                        <InputPassword @bind-Value="@registerModel.ConfirmPassword"
                                     Placeholder="Confirm your password"
                                     OnChange="@ValidatePasswordMatch" />
                        @if (FormStatus.FieldErrors.ContainsKey("confirmPassword"))
                        {
                            <small class="text-red-500">@FormStatus.FieldErrors["confirmPassword"].First()</small>
                        }
                    </FormItem>

                    <Divider>Or</Divider>

                    <Button Type="default"
                            Block
                            OnClick="HandleGoogleSignUp"
                            Loading="@isGoogleLoading">
                        <Space>
                            <Icon Type="google" Theme="outline" />
                            <span>Sign up with Google</span>
                        </Space>
                    </Button>
                </BaseFormComponent>
                break;

            case 1:
                <BaseFormComponent TModel="ProfileModel"
                                 Model="@profileModel"
                                 OnSubmit="HandleProfileStep"
                                 ShowBackButton="true"
                                 OnBack="@(() => currentStep--)"
                                 SubmitText="Continue">
                    <FormItem Label="Display Name" Required>
                        <Input @bind-Value="@profileModel.DisplayName"
                              Placeholder="How should we call you?" />
                    </FormItem>

                    <FormItem Label="Bio">
                        <TextArea @bind-Value="@profileModel.Bio"
                                Placeholder="Tell us about yourself"
                                MaxLength="160"
                                ShowCount />
                    </FormItem>

                    <FormItem Label="Avatar">
                        <Upload Action="/api/upload"
                               ListType="picture-card"
                               OnChange="HandleAvatarChange"
                               Accept="image/*"
                               MaxCount="1">
                            <div>
                                <Icon Type="plus" />
                                <div style="margin-top: 8px">Upload</div>
                            </div>
                        </Upload>
                    </FormItem>
                </BaseFormComponent>
                break;

            case 2:
                <BaseFormComponent TModel="InterestsModel"
                                 Model="@interestsModel"
                                 OnSubmit="HandleInterestsStep"
                                 ShowBackButton="true"
                                 OnBack="@(() => currentStep--)"
                                 SubmitText="Complete Registration">
                    <FormItem Label="Select Topics" Required>
                        <Select Mode="multiple"
                               @bind-Value="@interestsModel.Topics"
                               Placeholder="Select topics you're interested in">
                            @foreach (var category in topicCategories)
                            {
                                <SelectOptGroup Label="@category.Name">
                                    @foreach (var topic in category.Topics)
                                    {
                                        <SelectOption Value="@topic.Id">
                                            @topic.Name
                                        </SelectOption>
                                    }
                                </SelectOptGroup>
                            }
                        </Select>
                    </FormItem>

                    <FormItem Label="Content Preferences">
                        <div class="space-y-4">
                            @foreach (var preference in contentPreferences)
                            {
                                <div>
                                    <div class="flex justify-between mb-1">
                                        <span>@preference.Label</span>
                                        <span>@preference.Value</span>
                                    </div>
                                    <Slider Min="0" 
                                           Max="1" 
                                           Step="0.1"
                                           @bind-Value="@preference.Value" />
                                </div>
                            }
                        </div>
                    </FormItem>
                </BaseFormComponent>
                break;
        }

        <div class="mt-4 text-center">
            <a href="/login">Already have an account? Log in</a>
        </div>
    </Card>
</div>

<style>
    .register-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f0f2f5;
        padding: 24px;
    }
</style>
